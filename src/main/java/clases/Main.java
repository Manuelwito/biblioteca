/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package clases;

import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

import javax.swing.JOptionPane;

public class Main {

	public static void main(String[] args) {

		ArrayList<Libro> catalogo = new ArrayList<Libro>();

		while (true) {
			int opcion = menu();
			switch (opcion) {
			case 1:
				// TODO Alta de Libro
				// titulo:isbn:genero:autor:paginas
				alta(catalogo);
				break;
			case 2:
				listaLibros(catalogo);
				break;
			case 3:
				bajaLibros(catalogo);
				break;
			case 4:
				buscador(catalogo);
				break;
			default:
				break;
			}
		}
	}

	private static int menu() {
		int opcion = 0;

		do {
			System.out.println("Opciones:");
			System.out.println("1. Alta de Libro");
			System.out.println("2. Lista de Libros");
			System.out.println("3. Baja de Libros");
			System.out.println("4. Búsqueda de Libros");
			System.out.println("5. Ordenacion de Libros");
			System.out.println("Introduce la opcion:");

			opcion = leerOpcion(4);

		} while (opcion <= 0);

		return opcion;
	}

	private static int leerOpcion(int max) {
		int opcion = -1;
		try {
			Scanner teclado = new Scanner(System.in);
			opcion = teclado.nextInt();
			if (opcion > max)
				opcion = -1;
		} catch (InputMismatchException e) {
			System.out.println("Opción incorrecta");
		}

		return opcion;
	}

	private static void alta(ArrayList<Libro> catalogo) {
		// Leer de la entrada
		String datosLibro = obtenerDatosLibro();
		// titulo:isbn:genero:autor:paginas
		// Procesar la entrada
		Libro libro = procesaEntrada(datosLibro);
		// Crear el libro con los datos de la entrada
		catalogo.add(libro);
		// Meter el libro en el catalogo
	}

	private static String obtenerDatosLibro() {
		String datos = null;

		boolean validado = false;
		while (!validado) {
			System.out.println("Introduce los datos de un libro.");
			System.out.println("Usa el formato \"titulo:isbn:genero:autor:paginas\"");
			try {
				datos = leerCadena();
				if (true)// Supongo de momento que valida siempre
					validado = true;
			} catch (InputMismatchException e) {
				System.out.println("Datos de entrada no válidos");
			}
		}

		return datos;
	}

	private static Libro procesaEntrada(String entrada) {
		Libro libro = new Libro(entrada, entrada, null, entrada, null);

		String[] datos = entrada.split(":");

		String titulo = datos[0];
		String isbn = datos[1];
		Genero genero = Genero.getGenero(datos[2]);
		String autor = datos[3];
		Integer paginas = Integer.parseInt(datos[4]);

		libro.setTitulo(titulo);
		libro.setIsbn(isbn);
		libro.setGenero(genero);
		libro.setAutor(autor);
		libro.setPaginas(paginas);

		return libro;
	}

	private static String leerCadena() {
		String opcion = null;
		Scanner teclado = new Scanner(System.in);
		opcion = teclado.nextLine();
		return opcion;
	}

	private static void listaLibros(ArrayList<Libro> catalogo) {

		for (Libro i : catalogo) {
			System.out.println(i);

		}

	}
	
	
	/*
	 * El siguiente método pide al usuario el isbn del libro que desea eliminar 
	 * y lo envía al método busquedaLibros
	 * para que este método le retorne la posición en el arraylist
	 * 
	 * una vez obtenida la posición en la que se encuentra el libro a eliminar
	 * solicita confirmación y da de baja el libro
	 * 
	 */
	private static void bajaLibros(ArrayList<Libro> catalogo) {

		Scanner teclado = new Scanner(System.in);
		String isbn;
		int posLibro = 0;
		char respuesta;

		/*
		 * ENTRADA POR TECLADO DE DATOS DEL LIBRO QUE VAMOS A ELIMINAR
		 */
		System.out.println("Indique el ISBN del libro que desea eliminar: ");
		isbn = teclado.next();

		posLibro = busquedaLibros(catalogo, isbn, posLibro);
		/*
		 * ELIMINACIÓN DEL LIBRO
		 */
		System.out.println("El libro que desea eliminar es: "+catalogo.get(posLibro).toString());
		System.out.println("¿Está seguro S/N?");
		respuesta = teclado.next().charAt(0);
			if (respuesta == 's' || respuesta == 'S') {
				catalogo.remove(posLibro);
			}
			else;
		
	}
	
	private static void buscador(ArrayList<Libro> catalogo) {
		Scanner teclado = new Scanner(System.in);
		String isbn;
		int posLibro = 0;
		char respuesta;

		/*
		 * ENTRADA POR TECLADO DE DATOS DEL LIBRO QUE VAMOS A BUSCAR
		 */
		System.out.println("Indique el ISBN del libro que desea buscar: ");
		isbn = teclado.next();

		posLibro = busquedaLibros(catalogo, isbn, posLibro);
		/*
		 * LIBRO ENCONTRADO MUESTRA LIBRO
		 */
		System.out.println("El libro buscado es: "+catalogo.get(posLibro).toString());
		
	}
	
	
	/*
	 * EL SIGUIENTE METODO VA A RETORNAR LA POSICION DENTRO DEL 
	 * ARRAYLIST EN LA QUE SE ENCUENTRA
	 * EL LIBRO QUE ESTAMOS BUSCANDO: 
	 * 
	 * BIEN SEA PARA ELIMINARLO O PARA OBTENER LA INFORMACIÓN DEL MISMO.
	 */
	private static int busquedaLibros(ArrayList<Libro> catalogo, String isbn, int posLibro) {
		
		boolean encontrado = false;
		
		/*
		 * BUSQUEDA SECUENCIAL PARA ENCONTRAR EL LIBRO CON EL ISBN INDICADO
		 */
		int i = 0;
		while (i < catalogo.size() && encontrado == false) {
			if (catalogo.get(i).getIsbn().equalsIgnoreCase(isbn) == true) {
				encontrado = true;
			}
			i++;
		}
		if (encontrado == false) {
			System.out.println("El libro indicado no se encuentra en la Biblioteca");
		} else {
			posLibro = (i - 1);

		}
		return posLibro;

	}

}
